version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: notes-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: notesdb
      POSTGRES_USER: notesuser
      POSTGRES_PASSWORD: notespass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - notes-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U notesuser -d notesdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot API
  api:
    build:
      context: ./notes-suite-module
      dockerfile: Dockerfile
    container_name: notes-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_USERNAME: notesuser
      DB_PASSWORD: notespass
      JWT_SECRET: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
    depends_on:
      db:
        condition: service_healthy
    networks:
      - notes-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Web (Nginx serving Angular build)
  web:
    image: nginx:alpine
    container_name: notes-web
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:
      - ./notes-suite-ui/dist:/usr/share/nginx/html:ro
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api
    networks:
      - notes-network

volumes:
  postgres_data:
    driver: local

networks:
  notes-network:
    driver: bridge